"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _express = _interopRequireDefault(require("express"));

var _cors = _interopRequireDefault(require("cors"));

var _axios = _interopRequireDefault(require("axios"));

var _typeCheck = require("type-check");

var _buildUrl = _interopRequireDefault(require("build-url"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var defaultOptions = {};

var _default = function _default() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;

  /* placeholder sanity for future functionality */
  if (!(0, _typeCheck.typeCheck)("Object", options)) {
    throw new Error("Expected Object options, encountered ".concat(options, "."));
  } else if (Object.keys(options).length) {
    throw new Error("Expected an empty Object, encountered ".concat(Object.keys(options).join(","), "."));
  }

  return (0, _express["default"])().use((0, _cors["default"])({
    origin: function origin(_origin, callback) {
      return callback(null, true);
    }
  })).use( /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {
      var path, method, headers, body, queryParams, url, ignored, extras, _yield$axios, data, status, responseHeaders, unused, response, _response, _status, _data;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              path = req.path, method = req.method, headers = req.headers, body = req.body, queryParams = req.query;
              url = (0, _buildUrl["default"])(path.substring(1), {
                queryParams: queryParams
              });
              ignored = headers.host, extras = _objectWithoutProperties(headers, ["host"]);
              _context.next = 6;
              return (0, _axios["default"])(_objectSpread({
                url: url,
                method: method.toLowerCase(),
                headers: extras
              }, (0, _typeCheck.typeCheck)("Object", body) && Object.keys(body).length > 0 ? {
                data: body
              } : {}));

            case 6:
              _yield$axios = _context.sent;
              data = _yield$axios.data;
              status = _yield$axios.status;
              responseHeaders = _yield$axios.headers;
              unused = responseHeaders["transfer-encoding"], response = _objectWithoutProperties(responseHeaders, ["transfer-encoding"]);
              return _context.abrupt("return", res.set(response).status(status).send(data));

            case 14:
              _context.prev = 14;
              _context.t0 = _context["catch"](0);
              _response = _context.t0.response;

              if (!_response) {
                _context.next = 20;
                break;
              }

              _status = _response.status, _data = _response.data;
              return _context.abrupt("return", res.status(_status).json(_data));

            case 20:
              return _context.abrupt("return", next(_context.t0));

            case 21:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[0, 14]]);
    }));

    return function (_x, _x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }());
};

exports["default"] = _default;